<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Thickness x:Key="ButtonPadding">11,5</Thickness>
    <Thickness x:Key="ButtonThemeBorderThickness">0</Thickness>
    

    <Style x:Key="DefaultButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonThemeBorderThickness}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ControlContentThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlThemeCornerRadius}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="ContentBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- #Mouse over, enabled behaviors -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundMouseOver}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </MultiTrigger>
                        <!-- #Pressed behaviors -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                        </Trigger>
                        <!-- #Disabled behaviors -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                            <Setter TargetName="PART_ContentPresenter"
                                    Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AccentButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource AccentButtonBackground}"/>
        <Style.Triggers>
            <!-- #Mouse over, enabled behaviors -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundMouseOver}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushMouseOver}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </MultiTrigger>
            <!-- #Pressed behaviors -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundPressed}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushPressed}"/>
            </Trigger>
            <!-- #Disablec behaviors -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundDisabled}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="NavigationBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource NavigationBarButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource NavigationBarButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationBarButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonThemeBorderThickness}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ControlContentThemeFontFamily}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlThemeCornerRadius}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="ContentBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- #Mouse over, enabled behaviors -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource NavigationBarButtonBackgroundMouseOver}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource NavigationBarButtonBorderBrushMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </MultiTrigger>
                        <!-- #Pressed behaviors -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource NavigationBarButtonBackgroundPressed}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource NavigationBarButtonBorderBrushPressed}"/>
                        </Trigger>
                        <!-- #Disabled behaviors -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource NavigationBarButtonBackgroundDisabled}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource NavigationBarButtonBorderBrushDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}"/>

</ResourceDictionary>