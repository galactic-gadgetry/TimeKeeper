<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <!-- Setting the default TextBlock control prevents us from
    setting the foreground of the ContentPresenter's TextElement,
    because the ContentPresenter creates a TextBlock for string
    content. This data template is a workaround so that we can set
    the ContentPresenter's TextElement foreground.-->
    <DataTemplate DataType="{x:Type sys:String}">
        <TextBlock Text="{Binding}">
            <TextBlock.Resources>
                <Style TargetType="{x:Type TextBlock}"/>
            </TextBlock.Resources>
        </TextBlock>
    </DataTemplate>


    <Style x:Key="DefaultTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextBlockForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ControlContentThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,0,0,4"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="NavigationBarButtonTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource NavigationBarButtonForeground}"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Style.Triggers>
            <!-- #Mouse over, enabled behaviors -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource NavigationBarButtonForegroundMouseOver}"/>
            </MultiDataTrigger>
            <!-- #Pressed behaviors -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsPressed}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource NavigationBarButtonForegroundPressed}"/>
            </DataTrigger>
            <!-- #Disabled behaviors -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource NavigationBarButtonForegroundDisabled}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}"/>

</ResourceDictionary>